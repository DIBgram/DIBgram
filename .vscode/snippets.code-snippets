{
	// Place your DIBgram workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Theme color": {
		"scope": "css,scss",
		"prefix": "color",
		"body": [
			"var(--theme-color-$1)"
		],
	},
	"Ripple effect handler": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "ripple",
		"body": [
			"const ripple= React.useState<RippleEffectProps_AutoSettable>({state: 'off'});",
			"const [onMouseDown, onMouseUp, onMouseLeave]= handleMyMouseEventsFunction(ripple);"
		],
	},
	"Ripple effect": {
		"scope": "javascript,javascriptreact,typescriptreact",
		"prefix": "<RippleEffect>",
		"body": [
			"<RippleEffect {...ripple[0]} color=\"var(--theme-color-$1)\"/>"
		],
	},
	"Icon": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "<Icon>",
		"body": [
			"<span $0 dangerouslySetInnerHTML={{__html: ${2:icon_name}}}/>"
		],
		"description": "SVG based icon, must be in the icons folder and converted according to the Wiki. `icon_name` should be included from src/dibgram/ui/icons/icons.js"
	},
}